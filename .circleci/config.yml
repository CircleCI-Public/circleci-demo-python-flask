version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      # - run:
      #     name: setup Heroku
      #     command: bash .circleci/setup-heroku.sh
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            python manage.py test
      - run: 
          name: Contexts
          command: |
            echo Saras_Test

      - store_test_results:
          path: test-reports/
      - store_artifacts:
          path: test-reports/
          destination: tr1
      # - add_ssh_keys:
      #     fingerprints:
      #       - "48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4"
      # - deploy:
      #     name: Deploy Master to Heroku
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         git push heroku master
      #         heroku run python manage.py deploy
      #         heroku restart
      #       fi
  build_TWO:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
    steps:
      - checkout
      - run: mkdir new-reports
  build_three:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - run: echo "hi everyone!"
  test_one:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
    steps:
      - checkout
      - run: mkdir a_new_folder
      - run: echo "hello"
#   test_two:
#     docker:
#       - image: circleci/python:3.6.2-stretch-browsers
#     steps:
#       - checkout
#       - run: mkdir a_new_folder
#       - run: echo "World"
#   test_three:
#     docker:
#       - image: circleci/python:3
#     steps:
#       - checkout
#       - run: mkdirs a_new_folder
#       - run: echo "World"
# notify:
#   when: on_fail
#   webhooks:
#     # A list of hook hashes, containing the URL field
#      - url: https://requestb.in/xpozh7xp
workflows:
  version: 2
  test_holds:
    jobs:
      - build
      - build_TWO
      - hold:
          type: approval
          requires:
            - build
            - build_TWO
      - build_three:
          requires: 
            - hold
#       - test_three:
#           requires:
#             - build_three
#   second_workflow:
#     jobs:
#       - build_three
#       - build_two
#   notify:
#     requires:
#       - build_and_test
#       - second_workflow
